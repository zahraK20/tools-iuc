<tool id="cnvkit_breaks" name="CNVkit Breaks" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>List the targeted genes with segmentaion breakpoint </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="xrefs"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[  
        ln -s '$input_filename_file' ./sample.cnr &&
        ln -s '$input_segment_file' ./sample.cns &&
        cnvkit.py breaks
            ./sample.cnr
            ./sample.cns 
            --output gene-breaks.txt
            #if $min_probes
                --min-probes $min_probes
            #end if                    
    ]]></command>
    <inputs>
        <param name="input_filename_file" type="data" format="tabular" label="sample coverage file" help="cnr format and the output of CNVkit fix subcommand" />
        <param name="input_segment_file" type="data"  format="tabular" label="segmentation calls" help="cns format and the output of segment" />
        <param argument="--min-probes" optional="true" type="integer" label="Min-number of gene probes " value="1" help="minimum number of within gene-proes on both sides of a breakpoint to report it" />     
    </inputs>
    <outputs>
        <data name="gene_breaks" format="text" label="${tool.name} on ${on_string}:genes with copy number breakpoints" from_work_dir="gene-breaks.txt" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input_filename_file" ftype="tabular" value="sample.cnr" />
            <param name="input_segment_file" ftype="tabular" value="sample.cns" />
            <param name="min_probes" value="1" />
            <output name="gene_breaks">
                <assert_contents><has_text text="chromosome"/></assert_contents>
            </output> 
        </test>
    </tests>
    <help><![CDATA[
        
       Breaks helps to identify genes in which (a) an unbalanced fusion or other structural rearrangement breakpoint occured, or (b) CNV calling is simply difficult due to an inconsistent copy number signal.
       Two input files are required. The first input file is the sample coverage with *.cnr format that is output of CNVkit fix tool. The scond input is segmentation calls in the format of *.cns and output file of CNVkit segment tool. (both of them are positional arguments)
       
       The breaks text output contains columns: gene, chromosome, location, change, probes_left and probes_right
    ]]></help>
    <expand macro="citations" />
</tool>



 
